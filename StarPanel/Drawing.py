list = []can = NoneposList = []sca = NonestarLists = []import threadinglock = threading.Lock()def InitLayout(canvas, starList, originX, originY, scale) :    global lock    lock.acquire()    import Vector    import Star    import Tkinter    global list    global can    global posList    global sca    global starLists    starLists = starList    can = canvas    sca = scale    for item in list:        canvas.delete(item[0])    list = []    for star in starList:        pos = star.getPos()        x = pos.getX()        y = pos.getY()        posList = posList + [x,y]        r = max((star.getR(), 1 / scale))        color = star.getColor()        id = canvas.create_oval(originX + (pos.getX() - r) * scale, \                              originY + (pos.getY() - r) * scale, \                              originX + (pos.getX() + r) * scale, \                              originY + (pos.getY() + r) * scale, \                              width = 0, fill=color)        list.append((id, star ))        lock.release()        def updateLayout():    global lock    lock.acquire()    import Tkinter    import Vector    import Star    global list    global can    global posList    global sca    global starLists    p = []    for num in range(len(list)):        star = starLists[num]        pos = star.getPos()        x = posList[2*num]        y = posList[2*num + 1]        can.move(list[num][0],(pos.getX() - x)*sca,(pos.getY() - y)*sca)        p = p + [pos.getX(),pos.getY()]    posList = p    lock.release()